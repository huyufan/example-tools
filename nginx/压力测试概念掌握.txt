吞吐率（Requests per second）
服务器并发处理能力的量化描述，单位是reqs/s，指的是某个并发用户数下单位时间内处理的请求数。某个并发用户数下单位时间内能处理的最大请求数，称之为最大吞吐率。
记住：吞吐率是基于并发用户数的。这句话代表了两个含义，1：吞吐率和并发用户数相关；2：不同的并发用户数下，吞吐率一般是不同的。
计算公式：总请求数 / 处理完成这些请求数所花费的时间，即
Request per second = Complete requests / Time taken for tests


用户平均请求等待时间（Time per request）
计算公式：处理完成所有请求数所花费的时间/ （总请求数 / 并发用户数），即
Time per request = Time taken for tests /（ Complete requests / Concurrency Level）


服务器平均请求等待时间（Time per request: across all concurrent requests）
计算公式：处理完成所有请求数所花费的时间 / 总请求数，即
Time taken for tests / Complete requests
可以看到，它是吞吐率的倒数。
同时，它也=用户平均请求等待时间/并发用户数，即
Time per request / Concurrency Level


https://www.jb51.net/article/117879.htm （统计）

awk '{print $4}' access.log |cut -c 14-21|sort|uniq -c|sort -nr|head -n 100　（每秒请求量统计）

awk '{print $4}' access.log |cut -c 14-18|sort|uniq -c|sort -nr|head -n 100　（每分钟请求量统计）


awk '{print $4}' access.log |cut -c 14-15|sort|uniq -c|sort -nr|head -n 100　（每小时请求量统计）

在nginx log中最后一个字段加入$request_time


列出传输时间超过3秒的页面，显示前20条　　cat access.log|awk '($NF > 3){print $7}'|sort -n|uniq -c|sort -nr|head -20

列出php页面请求时间超过3秒的页面，并统计其出现的次数，显示前100条　cat access.log|awk '($NF > 1 && $7~/\.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100